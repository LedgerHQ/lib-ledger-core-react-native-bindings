// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from database.djinni

package co.ledger.core;

/**
 * An active connection to a database. This API is fully synchronous and all objects created by this interface need to
 * return synchronously. A connection is used to prepare statements, managing transactions and creating abstractions of
 * database objects.
 */
public abstract class DatabaseConnection {
    /**
     * Prepare a statement object using the given SQL query. The statement object will then be responsible of executing
     * the query and handle results. Statement objects may be reused over time if their `repeatable` flag is set to true.
     * @param query A SQL query to execute (e.g. "SELECT * FROM users WHERE name = 'Joe'")
     * @param repeatable A flag to indicate whether or not the statement is repeatable
     */
    public abstract DatabaseStatement prepareStatement(String query, boolean repeatable);

    /** Begin a SQL transaction on this connection. */
    public abstract void begin();

    /** End the current transaction and rollback all changes that occurred between the call of `begin` and `rollback`. */
    public abstract void rollback();

    /** End the current transaction and persist all changes that occurred between the call of `begin` and `commit`. */
    public abstract void commit();

    /** Close the current connection. After this call the connection should never be called again. */
    public abstract void close();

    /**
     * Create a new empty blob.
     * @return An empty blob
     */
    public abstract DatabaseBlob newBlob();
}
