// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from stellar_like_wallet.djinni

package co.ledger.core;

import java.util.concurrent.atomic.AtomicBoolean;

public abstract class StellarLikeOperation {
    /** Get the underlying operation information */
    public abstract StellarLikeOperationRecord getRecord();

    /** Get the underlying transaction in which this operation can be found. */
    public abstract StellarLikeTransaction getTransaction();
    /** Release the underlying native object */
    public abstract void destroy();


    private static final class CppProxy extends StellarLikeOperation
    {
        private final long nativeRef;
        private final AtomicBoolean destroyed = new AtomicBoolean(false);

        private CppProxy(long nativeRef)
        {
            if (nativeRef == 0) throw new RuntimeException("nativeRef is zero");
            this.nativeRef = nativeRef;
        }

        private native void nativeDestroy(long nativeRef);
        @Override
        public void destroy()
        {
            boolean destroyed = this.destroyed.getAndSet(true);
            if (!destroyed) nativeDestroy(this.nativeRef);
        }
        protected void finalize() throws java.lang.Throwable
        {
            destroy();
            super.finalize();
        }

        @Override
        public StellarLikeOperationRecord getRecord()
        {
            if (this.destroyed.get())
            {
                throw new RuntimeException("trying to use a destroyed object (StellarLikeOperation)");
            }
            return native_getRecord(this.nativeRef);
        }
        private native StellarLikeOperationRecord native_getRecord(long _nativeRef);

        @Override
        public StellarLikeTransaction getTransaction()
        {
            if (this.destroyed.get())
            {
                throw new RuntimeException("trying to use a destroyed object (StellarLikeOperation)");
            }
            return native_getTransaction(this.nativeRef);
        }
        private native StellarLikeTransaction native_getTransaction(long _nativeRef);
    }
}
