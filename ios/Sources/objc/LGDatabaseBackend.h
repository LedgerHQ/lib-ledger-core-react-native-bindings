// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from database.djinni

#import <Foundation/Foundation.h>
@class LGDatabaseBackend;
@protocol LGDatabaseEngine;


/**Class representing a database backend. */
@interface LGDatabaseBackend : NSObject

/**
 * Get the maximum number of concurrent connection that the backend is able to open on a single database.
 * @return the size of the connection pool.
 */
- (int32_t)getConnectionPoolSize;

/**
 * Get the maximum number of concurrent readonly connection that the backend is able to open on a single database.
 * @return the size of the readonly connection pool.
 */
- (int32_t)getReadonlyConnectionPoolSize;

/**
 * Enable or disable query logging. By default logging is disabled. Query logging will record every SQL query in log streams.
 * @return this database backend (to chain configuration calls)
 */
- (nullable LGDatabaseBackend *)enableQueryLogging:(BOOL)enable;

/**
 * Return true if query logging is enabled.
 * @return trye if query logging is enabled, false otherwise.
 */
- (BOOL)isLoggingEnabled;

/**
 * Create an instance of SQLite3 database.
 * @return DatabaseBackend object
 */
+ (nullable LGDatabaseBackend *)getSqlite3Backend;

/**
 * Create an instance of PostgreSQL database.
 * @return DatabaseBackend object
 */
+ (nullable LGDatabaseBackend *)getPostgreSQLBackend:(int32_t)connectionPoolSize
                          readonlyConnectionPoolSize:(int32_t)readonlyConnectionPoolSize;

/** Create a database backend instance from the given DatabaseEngine implementation. */
+ (nullable LGDatabaseBackend *)createBackendFromEngine:(nullable id<LGDatabaseEngine>)engine;

@end
