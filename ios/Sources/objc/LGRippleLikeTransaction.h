// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from ripple_like_wallet.djinni

#import <Foundation/Foundation.h>
@class LGAmount;
@class LGBigInt;
@class LGRippleLikeAddress;


/**
 * TODO: to be more accurate, all RippleLikeBlock classes should be renamed as RippleLikeLedger,
 * since there is an analogy between block and ledger concepts it's ok for the moment ...
 *Class representing a Ripple transaction
 */
@interface LGRippleLikeTransaction : NSObject

/** Get the hash of the transaction. */
- (nonnull NSString *)getHash;

/** Get Fees (in drop) */
- (nullable LGAmount *)getFees;

/** Get destination XRP address */
- (nullable LGRippleLikeAddress *)getReceiver;

/** Get XRP sender address */
- (nullable LGRippleLikeAddress *)getSender;

/** Get amount of XRP to send */
- (nullable LGAmount *)getValue;

/** Serialize the transaction to its raw format. */
- (nonnull NSData *)serialize;

/** Set signature of transaction, when a signature is set serialize method gives back serialized Tx */
- (void)setSignature:(nonnull NSData *)rSignature
          sSignature:(nonnull NSData *)sSignature;

- (void)setDERSignature:(nonnull NSData *)signature;

/**
 * Get the time when the transaction was issued or the time of the block including
 * this transaction
 */
- (nonnull NSDate *)getDate;

/**
 * Get block to which transaction belongs (was mined in)
 *getBlock(): optional<RippleLikeBlock>;
 * Get sequence of an account when tx was built (number of sent transactions from an account)
 */
- (nullable LGBigInt *)getSequence;

/** Get Ledger's sequence in which the tx was included */
- (nullable LGBigInt *)getLedgerSequence;

/** Get Signing public Key */
- (nonnull NSData *)getSigningPubKey;

@end
