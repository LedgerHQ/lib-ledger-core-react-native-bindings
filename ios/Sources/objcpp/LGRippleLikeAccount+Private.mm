// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from ripple_like_wallet.djinni

#import "LGRippleLikeAccount+Private.h"
#import "LGRippleLikeAccount.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "DJIMarshal+Private.h"
#import "LGRippleLikeTransaction+Private.h"
#import "LGRippleLikeTransactionBuilder+Private.h"
#import "LGStringCallback+Private.h"
#include <exception>
#include <stdexcept>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface LGRippleLikeAccount ()

- (id)initWithCpp:(const std::shared_ptr<::ledger::core::api::RippleLikeAccount>&)cppRef;

@end

@implementation LGRippleLikeAccount {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::ledger::core::api::RippleLikeAccount>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::ledger::core::api::RippleLikeAccount>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

- (void)broadcastRawTransaction:(nonnull NSData *)transaction
                       callback:(nullable id<LGStringCallback>)callback {
    try {
        _cppRefHandle.get()->broadcastRawTransaction(::djinni::Binary::toCpp(transaction),
                                                     ::djinni_generated::StringCallback::toCpp(callback));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)broadcastTransaction:(nullable LGRippleLikeTransaction *)transaction
                    callback:(nullable id<LGStringCallback>)callback {
    try {
        _cppRefHandle.get()->broadcastTransaction(::djinni_generated::RippleLikeTransaction::toCpp(transaction),
                                                  ::djinni_generated::StringCallback::toCpp(callback));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nullable LGRippleLikeTransactionBuilder *)buildTransaction {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->buildTransaction();
        return ::djinni_generated::RippleLikeTransactionBuilder::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

auto RippleLikeAccount::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return objc->_cppRefHandle.get();
}

auto RippleLikeAccount::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return ::djinni::get_cpp_proxy<LGRippleLikeAccount>(cpp);
}

}  // namespace djinni_generated

@end
