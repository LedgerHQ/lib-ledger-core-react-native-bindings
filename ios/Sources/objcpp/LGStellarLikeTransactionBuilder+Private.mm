// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from stellar_like_wallet.djinni

#import "LGStellarLikeTransactionBuilder+Private.h"
#import "LGStellarLikeTransactionBuilder.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "DJIMarshal+Private.h"
#import "LGAmount+Private.h"
#import "LGBigInt+Private.h"
#import "LGCurrency+Private.h"
#import "LGStellarLikeTransaction+Private.h"
#import "LGStellarLikeTransactionCallback+Private.h"
#include <exception>
#include <stdexcept>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface LGStellarLikeTransactionBuilder ()

- (id)initWithCpp:(const std::shared_ptr<::ledger::core::api::StellarLikeTransactionBuilder>&)cppRef;

@end

@implementation LGStellarLikeTransactionBuilder {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::ledger::core::api::StellarLikeTransactionBuilder>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::ledger::core::api::StellarLikeTransactionBuilder>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

- (nullable LGStellarLikeTransactionBuilder *)addNativePayment:(nonnull NSString *)address
                                                        amount:(nullable LGAmount *)amount {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->addNativePayment(::djinni::String::toCpp(address),
                                                                    ::djinni_generated::Amount::toCpp(amount));
        return ::djinni_generated::StellarLikeTransactionBuilder::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nullable LGStellarLikeTransactionBuilder *)addCreateAccount:(nonnull NSString *)address
                                                        amount:(nullable LGAmount *)amount {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->addCreateAccount(::djinni::String::toCpp(address),
                                                                    ::djinni_generated::Amount::toCpp(amount));
        return ::djinni_generated::StellarLikeTransactionBuilder::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nullable LGStellarLikeTransactionBuilder *)setBaseFee:(nullable LGAmount *)baseFee {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->setBaseFee(::djinni_generated::Amount::toCpp(baseFee));
        return ::djinni_generated::StellarLikeTransactionBuilder::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nullable LGStellarLikeTransactionBuilder *)setTextMemo:(nonnull NSString *)text {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->setTextMemo(::djinni::String::toCpp(text));
        return ::djinni_generated::StellarLikeTransactionBuilder::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nullable LGStellarLikeTransactionBuilder *)setNumberMemo:(nullable LGBigInt *)number {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->setNumberMemo(::djinni_generated::BigInt::toCpp(number));
        return ::djinni_generated::StellarLikeTransactionBuilder::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nullable LGStellarLikeTransactionBuilder *)setHashMemo:(nonnull NSData *)hash {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->setHashMemo(::djinni::Binary::toCpp(hash));
        return ::djinni_generated::StellarLikeTransactionBuilder::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nullable LGStellarLikeTransactionBuilder *)setReturnMemo:(nonnull NSData *)value {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->setReturnMemo(::djinni::Binary::toCpp(value));
        return ::djinni_generated::StellarLikeTransactionBuilder::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nullable LGStellarLikeTransactionBuilder *)setSequence:(nullable LGBigInt *)sequence {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->setSequence(::djinni_generated::BigInt::toCpp(sequence));
        return ::djinni_generated::StellarLikeTransactionBuilder::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)build:(nullable id<LGStellarLikeTransactionCallback>)callback {
    try {
        _cppRefHandle.get()->build(::djinni_generated::StellarLikeTransactionCallback::toCpp(callback));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

+ (nullable LGStellarLikeTransaction *)parseRawTransaction:(nonnull LGCurrency *)currency
                                            rawTransaction:(nonnull NSData *)rawTransaction {
    try {
        auto objcpp_result_ = ::ledger::core::api::StellarLikeTransactionBuilder::parseRawTransaction(::djinni_generated::Currency::toCpp(currency),
                                                                                                      ::djinni::Binary::toCpp(rawTransaction));
        return ::djinni_generated::StellarLikeTransaction::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

+ (nullable LGStellarLikeTransaction *)parseSignatureBase:(nonnull LGCurrency *)currency
                                           rawTransaction:(nonnull NSData *)rawTransaction {
    try {
        auto objcpp_result_ = ::ledger::core::api::StellarLikeTransactionBuilder::parseSignatureBase(::djinni_generated::Currency::toCpp(currency),
                                                                                                     ::djinni::Binary::toCpp(rawTransaction));
        return ::djinni_generated::StellarLikeTransaction::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

auto StellarLikeTransactionBuilder::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return objc->_cppRefHandle.get();
}

auto StellarLikeTransactionBuilder::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return ::djinni::get_cpp_proxy<LGStellarLikeTransactionBuilder>(cpp);
}

}  // namespace djinni_generated

@end
