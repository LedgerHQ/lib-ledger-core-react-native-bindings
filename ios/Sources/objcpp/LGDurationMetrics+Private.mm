// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from core.djinni

#import "LGDurationMetrics+Private.h"
#import "LGDurationMetrics.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "DJIMarshal+Private.h"
#import "LGDurationMetric+Private.h"
#include <exception>
#include <stdexcept>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface LGDurationMetrics ()

- (id)initWithCpp:(const std::shared_ptr<::ledger::core::api::DurationMetrics>&)cppRef;

@end

@implementation LGDurationMetrics {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::ledger::core::api::DurationMetrics>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::ledger::core::api::DurationMetrics>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

+ (nonnull NSDictionary<NSString *, LGDurationMetric *> *)getAllDurationMetrics {
    try {
        auto objcpp_result_ = ::ledger::core::api::DurationMetrics::getAllDurationMetrics();
        return ::djinni::Map<::djinni::String, ::djinni_generated::DurationMetric>::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

auto DurationMetrics::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return objc->_cppRefHandle.get();
}

auto DurationMetrics::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return ::djinni::get_cpp_proxy<LGDurationMetrics>(cpp);
}

}  // namespace djinni_generated

@end
