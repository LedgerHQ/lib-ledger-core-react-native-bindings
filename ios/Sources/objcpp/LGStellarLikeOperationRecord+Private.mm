// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from stellar_like_wallet.djinni

#import "LGStellarLikeOperationRecord+Private.h"
#import "DJIMarshal+Private.h"
#import "LGAmount+Private.h"
#import "LGStellarLikeAsset+Private.h"
#import "LGStellarLikeOperationType+Private.h"
#include <cassert>

namespace djinni_generated {

auto StellarLikeOperationRecord::toCpp(ObjcType obj) -> CppType
{
    assert(obj);
    return {::djinni::String::toCpp(obj.operationHash),
            ::djinni::Bool::toCpp(obj.successful),
            ::djinni::Enum<::ledger::core::api::StellarLikeOperationType, LGStellarLikeOperationType>::toCpp(obj.operationType),
            ::djinni::String::toCpp(obj.transactionHash),
            ::djinni_generated::StellarLikeAsset::toCpp(obj.asset),
            ::djinni::Optional<std::experimental::optional, ::djinni_generated::StellarLikeAsset>::toCpp(obj.sourceAsset),
            ::djinni::Optional<std::experimental::optional, ::djinni_generated::Amount>::toCpp(obj.sourceAmount)};
}

auto StellarLikeOperationRecord::fromCpp(const CppType& cpp) -> ObjcType
{
    return [[LGStellarLikeOperationRecord alloc] initWithOperationHash:(::djinni::String::fromCpp(cpp.operationHash))
                                                            successful:(::djinni::Bool::fromCpp(cpp.successful))
                                                         operationType:(::djinni::Enum<::ledger::core::api::StellarLikeOperationType, LGStellarLikeOperationType>::fromCpp(cpp.operationType))
                                                       transactionHash:(::djinni::String::fromCpp(cpp.transactionHash))
                                                                 asset:(::djinni_generated::StellarLikeAsset::fromCpp(cpp.asset))
                                                           sourceAsset:(::djinni::Optional<std::experimental::optional, ::djinni_generated::StellarLikeAsset>::fromCpp(cpp.sourceAsset))
                                                          sourceAmount:(::djinni::Optional<std::experimental::optional, ::djinni_generated::Amount>::fromCpp(cpp.sourceAmount))];
}

}  // namespace djinni_generated
