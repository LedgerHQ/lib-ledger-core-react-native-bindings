// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from database.djinni

#import "LGDatabaseEngine+Private.h"
#import "LGDatabaseEngine.h"
#import "DJIMarshal+Private.h"
#import "DJIObjcWrapperCache+Private.h"
#import "LGDatabaseConnectionPool+Private.h"
#include <stdexcept>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

namespace djinni_generated {

class DatabaseEngine::ObjcProxy final
: public ::ledger::core::api::DatabaseEngine
, private ::djinni::ObjcProxyBase<ObjcType>
{
    friend class ::djinni_generated::DatabaseEngine;
public:
    using ObjcProxyBase::ObjcProxyBase;
    std::shared_ptr<::ledger::core::api::DatabaseConnectionPool> connect(const std::string & c_databaseName) override
    {
        @autoreleasepool {
            auto objcpp_result_ = [djinni_private_get_proxied_objc_object() connect:(::djinni::String::fromCpp(c_databaseName))];
            return ::djinni_generated::DatabaseConnectionPool::toCpp(objcpp_result_);
        }
    }
    int32_t getPoolSize() override
    {
        @autoreleasepool {
            auto objcpp_result_ = [djinni_private_get_proxied_objc_object() getPoolSize];
            return ::djinni::I32::toCpp(objcpp_result_);
        }
    }
    int32_t getReadonlyPoolSize() override
    {
        @autoreleasepool {
            auto objcpp_result_ = [djinni_private_get_proxied_objc_object() getReadonlyPoolSize];
            return ::djinni::I32::toCpp(objcpp_result_);
        }
    }
};

}  // namespace djinni_generated

namespace djinni_generated {

auto DatabaseEngine::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return ::djinni::get_objc_proxy<ObjcProxy>(objc);
}

auto DatabaseEngine::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return dynamic_cast<ObjcProxy&>(*cpp).djinni_private_get_proxied_objc_object();
}

}  // namespace djinni_generated
